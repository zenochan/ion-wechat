{"version":3,"file":"qrcode.js","sourceRoot":"","sources":["../../../../src/components/qrcode/qrcode.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAC,MAAM,eAAe,CAAC;AAEjF,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;;IA2B/B,yBAAoB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;2BAfgB,KAAK;wBAC7B,QAAQ;qBACf,EAAE;uBACqR,EAAE;oCAEpO,GAAG;sBACtD,CAAC;qBACH,CAAC;qBACD,EAAE;yBACM,SAAS;0BACP,SAAS;KAQ1C;IAED,qCAAW,GAAX;QAEE,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,mCAAS,GAAT;QAAA,iBAwBC;QAtBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,SAAS,CAAC,KAAI,CAAC,KAAK,EACvB;gBACE,OAAO,EAAE,KAAI,CAAC,OAAO;gBACrB,oBAAoB,EAAE,KAAI,CAAC,oBAAoB;gBAC/C,MAAM,EAAE,KAAI,CAAC,MAAM;gBACnB,KAAK,EAAE,KAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,KAAI,CAAC,KAAK;gBACjB,KAAK,EAAE;oBACL,IAAI,EAAE,KAAI,CAAC,SAAS;oBACpB,KAAK,EAAE,KAAI,CAAC,UAAU;iBACvB;aACF,EAAE,UAAU,GAAG,EAAE,GAAG;gBACnB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACR,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,MAAM,CAAC,GAAG,CAAC,CAAC;iBACb;gBAAC,IAAI,CAAC,CAAC;;oBAEN,OAAO,CAAC,GAAG,CAAC,CAAC;iBACd;aACF,CAAC,CAAA;SACP,CAAC,CAAA;KACH;IAED,kCAAQ,GAAR,UAAS,MAAM;QAAf,iBAuBC;QArBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAI,CAAC,KAAK,EAAE;gBAClC,OAAO,EAAE,KAAI,CAAC,OAAO;gBACrB,oBAAoB,EAAE,KAAI,CAAC,oBAAoB;gBAC/C,MAAM,EAAE,KAAI,CAAC,MAAM;gBACnB,KAAK,EAAE,KAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,KAAI,CAAC,KAAK;gBACjB,KAAK,EAAE;oBACL,IAAI,EAAE,KAAI,CAAC,SAAS;oBACpB,KAAK,EAAE,KAAI,CAAC,UAAU;iBACvB;aACF,EAAE,UAAU,KAAK;gBAChB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;;oBAEV,MAAM,CAAC,KAAK,CAAC,CAAC;iBACf;gBAAC,IAAI,CAAC,CAAC;;oBAEN,OAAO,CAAC,SAAS,CAAC,CAAC;iBACpB;aACF,CAAC,CAAA;SACH,CAAC,CAAC;KACJ;IAED,uCAAa,GAAb,UAAc,OAAO;QAEnB,GAAG,CAAC,CAAa,UAAwC,EAAxC,KAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,EAAxC,cAAwC,EAAxC,IAAwC;YAApD,IAAI,IAAI,SAAA;YACX,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;KACnE;IAED,sCAAY,GAAZ;QAAA,iBAiCC;QA/BC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;SACR;QAED,IAAI,OAAgB,CAAC;;QAGrB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAEzB,KAAK,QAAQ;gBACX,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC;;oBAE5B,AADA,iBAAiB;oBACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;iBAC7B,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACT,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAClB,CAAC,CAAC;gBACH,KAAK,CAAC;YACR,KAAK,KAAK,CAAC;YACX,KAAK,KAAK,CAAC;YACX;gBACE,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC7C,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,CAAS;;oBAE9B,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;iBAC7B,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACT,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAClB,CAAC,CAAA;SAEL;KACF;;gBA/HF,SAAS,SAAC;oBACT,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,oDACmC;iBAC9C;;;;gBARqC,SAAS;;;gCAc5C,KAAK,SAAC,MAAM;6BACZ,KAAK,SAAC,WAAW;0BACjB,KAAK,SAAC,OAAO;4BACb,KAAK,SAAC,SAAS;yCAEf,KAAK,SAAC,sBAAsB;2BAC5B,KAAK,SAAC,QAAQ;0BACd,KAAK,SAAC,OAAO;0BACb,KAAK,SAAC,OAAO;8BACb,KAAK,SAAC,WAAW;+BACjB,KAAK,SAAC,YAAY;+BAElB,SAAS,SAAC,YAAY;;0BA1BzB;;SASa,eAAe","sourcesContent":["import {Component, ElementRef, Input, Renderer2, ViewChild} from '@angular/core';\n\nimport * as QRCode from 'qrcode';\n\n@Component({\n  selector: 'qrcode',\n  template: `\n    <div #qrcElement [class]=\"cssClass\"></div>`\n})\nexport class QrcodeComponent\n{\n\n  text: string;\n\n  @Input('type') elementType: 'url' | 'img' | 'canvas' = 'img';\n  @Input('qrc-class') cssClass = 'qrcode';\n  @Input('value') value = '';\n  @Input('version') version: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | '17' | '18' | '19' | '20' | '21' | '22' | '23' | '24' | '25' | '26' | '27' | '28' | '29' | '30' | '31' | '32' | '33' | '34' | '35' | '36' | '37' | '38' | '39' | '40' | '' = '';\n\n  @Input('errorCorrectionLevel') errorCorrectionLevel: 'L' | 'M' | 'Q' | 'H' = 'M';\n  @Input('margin') margin = 4;\n  @Input('scale') scale = 4;\n  @Input('width') width = 10;\n  @Input('colorDark') colorDark = '#000000';\n  @Input('colorLight') colorLight = '#ffffff';\n\n  @ViewChild('qrcElement') qrcElement: ElementRef;\n\n\n  constructor(private renderer: Renderer2)\n  {\n\n  }\n\n  ngOnChanges()\n  {\n    this.createQRCode();\n  }\n\n  toDataURL()\n  {\n    return new Promise((resolve, reject) => {\n      QRCode.toDataURL(this.value,\n          {\n            version: this.version,\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            width: this.width,\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight\n            }\n          }, function (err, url) {\n            if (err) {\n              console.error(err);\n              reject(err);\n            } else {\n              //console.log(url);\n              resolve(url);\n            }\n          })\n    })\n  }\n\n  toCanvas(canvas)\n  {\n    return new Promise((resolve, reject) => {\n      QRCode.toCanvas(canvas, this.value, {\n        version: this.version,\n        errorCorrectionLevel: this.errorCorrectionLevel,\n        margin: this.margin,\n        scale: this.scale,\n        width: this.width,\n        color: {\n          dark: this.colorDark,\n          light: this.colorLight\n        }\n      }, function (error) {\n        if (error) {\n          //console.error(error);\n          reject(error);\n        } else {\n          //console.log('success!');\n          resolve(\"success\");\n        }\n      })\n    });\n  }\n\n  renderElement(element)\n  {\n    for (let node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node);\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element);\n  }\n\n  createQRCode()\n  {\n    if (!this.value) {\n      return;\n    }\n\n    let element: Element;\n    //console.log(\"QR Encoding \" + this.value);\n\n    switch (this.elementType) {\n\n      case 'canvas':\n        element = this.renderer.createElement('canvas');\n        this.toCanvas(element).then((v) => {\n          //console.log(v);\n          this.renderElement(element);\n        }).catch((e) => {\n          console.error(e);\n        });\n        break;\n      case 'url':\n      case 'img':\n      default:\n        element = this.renderer.createElement('img');\n        this.toDataURL().then((v: string) => {\n          //console.log(v);\n          element.setAttribute(\"src\", v);\n          this.renderElement(element);\n        }).catch((e) => {\n          console.error(e);\n        })\n\n    }\n  }\n\n}\n"]}
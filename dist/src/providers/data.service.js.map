{"version":3,"file":"data.service.js","sourceRoot":"","sources":["../../../src/providers/data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport \"rxjs/add/operator/map\";\nimport {Storage} from \"@ionic/storage\";\nimport {Events} from \"ionic-angular\";\n\n\nlet ENV = {DEBUG: false};\n\n/*\n Generated class for the DataService provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n@Injectable()\nexport class DataService\n{\n\n  static KEY_USER: string = 'user';\n  private user: any;\n\n  constructor(public storage: Storage, public events: Events)\n  {\n    this.getUser().then(user => {\n      if (this.user) this.events.publish(\"user:ready\", this.user)\n    }).catch();\n  }\n\n  setUser(user: any)\n  {\n    console.warn(\"set user\");\n    this.user = user;\n    if (this.user) {\n      // *m/7d 有效期\n      // this.user.expiresIn = Date.now() + (ENV.DEBUG ? 600000 : 86400000 * 30);\n      this.user.expiresIn = Date.now() + (ENV.DEBUG ? 1000 : 86400000 * 7);\n      this.events.publish(\"user:ready\", this.user)\n    }\n    this.storage.set(DataService.KEY_USER, user);\n  }\n\n  getUser(): Promise<any>\n  {\n    if (this.user) {\n      return Promise.resolve(this.user);\n    } else {\n      return this.storage.get(DataService.KEY_USER)\n          .then(user => {\n            if (user && user.expiresIn < Date.now()) {\n              this.storage.remove(DataService.KEY_USER);\n              return null;\n            }\n            this.user = user;\n            return this.user;\n          });\n    }\n  }\n\n  getUserSync(): any\n  {\n    return this.user;\n  }\n\n  get(key: string): Promise<any>\n  {\n    return this.storage.get(key)\n  }\n\n  set(key: string, value: any): Promise<any>\n  {\n    return this.storage.set(key, value);\n  }\n\n  doOnUserReady(action: (user: any) => void, event: string = \"user:ready\")\n  {\n    this.getUser().then(user => {\n      this.user = this.user || user;\n      if (this.user) {\n        action(this.user);\n        console.warn(\"user ready\");\n      } else {\n        let handler = (user) => {\n          action(user);\n          this.events.unsubscribe(event, handler)\n        };\n        this.events.subscribe(event, handler);\n        console.warn(\"user no ready\");\n      }\n    });\n  }\n\n}\n"]}
{"version":3,"file":"weui.service.js","sourceRoot":"","sources":["../../../src/providers/weui.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;AACzC,OAAO,uBAAuB,CAAC;AAC/B,OAAO,EAAC,eAAe,EAAW,iBAAiB,EAAE,eAAe,EAAe,MAAM,eAAe,CAAC;;;;;;;;IAWvG,qBAAoB,WAA8B,EAC9B,SAA0B,EAC1B,SAA0B;QAF1B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAiB;KAE7C;IAED,iCAAW,GAAX;QAEE,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACpC,OAAO,EAAE,MAAM;YACf,OAAO,EAAE,mRAQd;SACI,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,MAAM,CAAC,OAAO,CAAC;KAChB;IAED,gCAAU,GAAV,UAAW,OAAe,EAAE,QAAsC;QAEhE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,IAAI,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;KACpF;IAED,2BAAK,GAAL,UAAM,OAAqB;QAEzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;KACjD;IAED,2BAAK,GAAL,UAAM,OAAe,EAAE,EAAW,EAAE,MAAmB,EAAE,KAAoB;QAApB,sBAAA,EAAA,YAAoB;QAE3E,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC3B,qBAAqB,EAAE,KAAK;YAC5B,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,EAAE,IAAI,GAAG;oBACf,OAAO,EAAE,MAAM;iBAChB,CAAC;SACH,CAAC,CAAC,OAAO,EAAE,CAAC;KACd;IAGD,2BAAK,GAAL,UAAM,OAOL;QAEC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC3B,qBAAqB,EAAE,KAAK;YAC5B,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,IAAI;YAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,MAAM,EAAE,CAAC;oBACP,IAAI,EAAE,OAAO;oBACb,WAAW,EAAE,OAAO,CAAC,WAAW;oBAChC,IAAI,EAAE,OAAO,CAAC,IAAI;iBACnB,CAAC;YACF,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,IAAI;iBACX,EAAE;oBACD,IAAI,EAAE,OAAO,CAAC,EAAE,IAAI,GAAG;oBACvB,OAAO,EAAE,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAA5C,CAA4C;iBAC9D,CAAC;SACH,CAAC,CAAC,OAAO,EAAE,CAAC;KACd;IAED,4BAAM,GAAN,UAAO,OAAe,EAAE,EAAW,EAAE,MAAe,EAAE,MAAmB;QAEvE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC3B,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;oBACvC,IAAI,EAAE,MAAM,IAAI,IAAI;iBACrB,EAAE;oBACD,IAAI,EAAE,EAAE,IAAI,GAAG;oBACf,OAAO,EAAE,MAAM;iBAChB,CAAC;SACH,CAAC,CAAC,OAAO,EAAE,CAAC;KAEd;;gBA1FF,UAAU;;;;gBARuB,iBAAiB;gBAA3C,eAAe;gBAA8B,eAAe;;sBAFpE;;SAWa,WAAW","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport \"rxjs/add/operator/map\";\nimport {AlertController, Loading, LoadingController, ToastController, ToastOptions} from \"ionic-angular\";\n\n/*\n Generated class for the UikitService provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n@Injectable()\nexport class WeuiService\n{\n  constructor(private loadingCtrl: LoadingController,\n              private alertCtrl: AlertController,\n              private toastCtrl: ToastController)\n  {\n  }\n\n  showLoading():Loading\n  {\n    let loading = this.loadingCtrl.create({\n      spinner: 'hide',\n      content: `\n      <div>\n        <div class=\"weui-mask_transparent\"></div>\n        <div class=\"weui-toast\">\n            <i class=\"weui-loading weui-icon_toast\"></i>\n            <p class=\"weui-toast__content\">数据加载中</p>\n        </div>\n    </div>\n`\n    });\n\n    loading.present();\n    return loading;\n  }\n\n  toastShort(message: string, position?: \"top\" | \"bottom\" | \"middle\"): Promise<any>\n  {\n    return this.toast({message: message, position: position || \"top\", duration: 2000});\n  }\n\n  toast(options: ToastOptions): Promise<any>\n  {\n    return this.toastCtrl.create(options).present();\n  }\n\n  alert(message: string, ok?: string, action?: () => void, title: string = '提示'): Promise<any>\n  {\n    return this.alertCtrl.create({\n      enableBackdropDismiss: false,\n      title: title,\n      message: message,\n      buttons: [{\n        text: ok || \"好\",\n        handler: action\n      }]\n    }).present();\n  }\n\n\n  input(options: {\n    title?: string,\n    message?: string,\n    ok?: string,\n    placeholder?: string,\n    type?: string,\n    action?: (input: string) => void,\n  }): Promise<any>\n  {\n    return this.alertCtrl.create({\n      enableBackdropDismiss: false,\n      title: options.title || \"提示\",\n      message: options.message,\n      inputs: [{\n        name: \"input\",\n        placeholder: options.placeholder,\n        type: options.type\n      }],\n      buttons: [{\n        text: \"取消\"\n      }, {\n        text: options.ok || \"好\",\n        handler: data => options.action && options.action(data.input)\n      }]\n    }).present();\n  }\n\n  prompt(message: string, ok?: string, cancel?: string, action?: () => void): Promise<any>\n  {\n    return this.alertCtrl.create({\n      title: \"提示\", message: message, buttons: [{\n        text: cancel || \"取消\"\n      }, {\n        text: ok || \"好\",\n        handler: action\n      }]\n    }).present();\n\n  }\n}\n\n"]}
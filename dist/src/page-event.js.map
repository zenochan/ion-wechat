{"version":3,"file":"page-event.js","sourceRoot":"","sources":["../../src/page-event.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Page Event  Returns  Description\n * ionViewDidLoad  void  Runs when the page has loaded. This event only happens once per page being created. If a page leaves but is cached, then this event will not fire again on a subsequent viewing. The ionViewDidLoad event is good place to put your setup code for the page.\n * ionViewWillEnter  void  Runs when the page is about to enter and become the active page.\n * ionViewDidEnter  void  Runs when the page has fully entered and is now the active page. This event will fire, whether it was the first load or a cached page.\n * ionViewWillLeave  void  Runs when the page is about to leave and no longer be the active page.\n * ionViewDidLeave  void  Runs when the page has finished leaving and is no longer the active page.\n * ionViewWillUnload  void  Runs when the page is about to be destroyed and have its elements removed.\n * ionViewCanEnter  boolean/Promise  Runs before the view can enter. This can be used as a sort of \"guard\" in authenticated views where you need to check permissions before the view can enter\n * ionViewCanLeave  boolean/Promise  Runs before the view can leave. This can be used as a sort of \"guard\" in authenticated views where you need to check permissions before the view can leave\n */\nexport interface PageEvent\n{\n  ionViewDidLoad: Function\n\n  ionViewWillEnter: Function\n  ionViewDidEnter: Function\n  ionViewWillLeave: Function\n  ionViewDidLeave: Function\n  ionViewWillUnload: Function\n  ionViewCanEnter: Function\n  ionViewCanLeave: Function\n}\n\n"]}